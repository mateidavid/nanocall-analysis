#!/bin/bash
source "$(dirname "$(readlink -e "${BASH_SOURCE[0]}")")"/common.sh

# get scaling & basecalling runtimes from nanocall log file

printab "training_wall" "basecalling_wall" "total_wall" \
    "training_cpu" "basecalling_cpu" "total_cpu" \
    "training_load" "basecalling_load" "total_load"

a=($(cat "$@" |
        tr '\r' '\n' |
        grep -n 'seconds$' |
        tr ':' ' ' |
        sed 's/  */\t/g' |
        sort -k 3n -k 1n |
        tail -n 2 |
        cut -f 3,6))

if [ ${#a[@]} -eq 2 ]; then
    t=(0 ${a[1]})
elif [ ${#a[@]} -eq 4 ]; then
    if [ ${a[0]} = ${a[2]} ]; then
        t=(${a[1]} ${a[3]} $(( ${a[1]} + ${a[3]} )))
    else
        t=(0 ${a[3]} ${a[3]})
    fi
else
    t=('.' '.' '.')
fi

# extract user cpu time, if available
for key in "training" "basecalling"; do
    v=$(zcat -f "$1" | grep "user_cpu_secs" | grep "$key" | awk -F= '{print int($NF)}')
    [ "$v" ] || v=.
    t+=($v)
done
if [ "${t[4]}" != "." ]; then
    [ "${t[3]}" != "." ] || t[3]=0
    t+=($((${t[3]} + ${t[4]})))
else
    t+=(".")
fi

for i in 0 1 2; do
    ip3=$(($i + 3))
    if [ "${t[$ip3]}" != "." ] && [ "${t[$ip3]}" != "0" ]; then
        t+=($(echo "scale=2; ${t[$ip3]} / ${t[$i]}" | bc))
    else
        t+=(".")
    fi
done

printab "${t[@]}"
